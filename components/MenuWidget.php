<?php


namespace app\components;


use app\models\Category;
use yii\base\Widget;

class MenuWidget extends Widget
{
    /**
     * @var $tpl
     * Чтобы виждет стал более универсальным и смог работать более чем с одним шаблоном
     */
    public $tpl;
    /**
     * @var $ul_class
     * css класс будем присваивать для меню
     */
    public $ul_class;
    /**
     * @var $data
     * получать массив категории
     */
    public $data;
    /**
     * @var $tree
     * формируем дерево меню
     */
    public $tree;
    /**
     * @var $menuHtml
     * готовая верстка меню
     */
    public $menuHtml;

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        if ($this->ul_class === null){
            $this->ul_class = 'menu';
        }

        if ($this->tpl === null){
            $this->tpl = 'menu';
        }
        $this->tpl .='.php';
    }

    public function run()
    {
        //get cache
        $menu = \Yii::$app->cache->get('menu');
        if ($menu){
            return $menu;
        }

        $this->data = Category::find()->select('id, parent_id, title')->indexBy('id')->asArray()->all();
        $this->tree = $this->getTree();
        $this->menuHtml = '<ul class="' . $this->ul_class . '">';
        $this->menuHtml .= $this->getMenuHtml($this->tree);
        $this->menuHtml .= '</ul>';

        // set cache
        \Yii::$app->cache->set('menu', $this->menuHtml, 60);
        return  $this->menuHtml;
    }

    /**
     * @return array
     * формирование меню
     */
    protected function getTree(){
        $tree = [];
        foreach ($this->data as $id => &$node){
            if (!$node['parent_id'])
                $tree[$id] = &$node;
            else
                $this->data[$node['parent_id']]['children'][$node['id']] = &$node;
        }
        return $tree;
    }


    /**
     * @param $tree
     * @return string
     * создаем верстку меню, html
     */
    protected function getMenuHtml($tree){
        $str = '';
        foreach ($tree as $category){
            $str .= $this->catToTemplate($category);
        }
        return $str;
    }

    /**
     * @param $category
     * @return false|string
     * получает категорию и подключает шаблон, в шаблоне прописана верстка для конкретной категории
     */
    protected function catToTemplate($category){
        ob_start();
        include __DIR__ . '/menu_tpl/' . $this->tpl;
        return ob_get_clean();
    }

}